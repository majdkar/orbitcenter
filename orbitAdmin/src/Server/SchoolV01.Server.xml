<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SchoolV01.Server</name>
    </assembly>
    <members>
        <member name="T:SchoolV01.Server.Controllers.BaseApiController`1">
            <summary>
            Abstract BaseApi Controller Class
            </summary>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Communication.ChatsController.GetChatHistoryAsync(System.String)">
            <summary>
            Get user wise chat history
            </summary>
            <param name="contactId"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Communication.ChatsController.GetChatUsersAsync">
            <summary>
            get available users
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Communication.ChatsController.SaveMessageAsync(SchoolV01.Domain.Models.Chat.ChatHistory{SchoolV01.Domain.Interfaces.Chat.IChatUser})">
            <summary>
            Save Chat Message
            </summary>
            <param name="message"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Identity.AccountController.UpdateProfile(SchoolV01.Application.Requests.Identity.UpdateProfileRequest)">
            <summary>
            Update Profile
            </summary>
            <param name="model"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Identity.AccountController.ResetPasswordAndEmail(SchoolV01.Application.Requests.Identity.ResetPasswordAndEmailRequest)">
            <summary>
            Reset Password And Email
            </summary>
            <param name="model"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Identity.AccountController.ChangePassword(SchoolV01.Application.Requests.Identity.ChangePasswordRequest)">
            <summary>
            Change Password
            </summary>
            <param name="model"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Identity.AccountController.GetProfilePictureAsync(System.String)">
            <summary>
            Get Profile picture by Id
            </summary>
            <param name="userId"></param>
            <returns>Status 200 OK </returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Identity.AccountController.UpdateProfilePictureAsync(SchoolV01.Application.Requests.Identity.UpdateProfilePictureRequest)">
            <summary>
            Update Profile Picture
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Identity.AccountController.UpdateProfileByAdmin(SchoolV01.Application.Requests.Identity.UpdateProfileByAdminRequest)">
            <summary>
            Update Profile By Admin
            </summary>
            <param name="model"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Identity.AccountController.ChangePasswordByAdmin(SchoolV01.Application.Requests.Identity.ChangePasswordByAdminRequest)">
            <summary>
            Change Password By Admin
            </summary>
            <param name="model"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Identity.TokenController.Get(SchoolV01.Application.Requests.Identity.TokenRequest)">
            <summary>
            Get Token (Email, Password)
            ClientType: (Employee, Student, Guardian, Not Type Or Admin)
            ClientId is the the Identity for Client type
            </summary>
            <param name="model"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Identity.TokenController.Refresh(SchoolV01.Application.Requests.Identity.RefreshTokenRequest)">
            <summary>
            Refresh Token
            </summary>
            <param name="model"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Identity.UserController.GetAll">
            <summary>
            Get User Details
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Identity.UserController.GetById(System.String)">
            <summary>
            Get User By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Identity.UserController.GetByEmail(System.String)">
            <summary>
            Get User By Email
            </summary>
            <param name="useremail"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Identity.UserController.GetRolesAsync(System.String)">
            <summary>
            Get User Roles By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Identity.UserController.UpdateRolesAsync(SchoolV01.Application.Requests.Identity.UpdateUserRolesRequest)">
            <summary>
            Update Roles for User
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Identity.UserController.RegisterAsync(SchoolV01.Application.Requests.Identity.RegisterRequest)">
            <summary>
            Register a User
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Identity.UserController.ConfirmEmailAsync(System.String,System.String)">
            <summary>
            Confirm Email
            </summary>
            <param name="userId"></param>
            <param name="code"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Identity.UserController.ToggleUserStatusAsync(SchoolV01.Application.Requests.Identity.ToggleUserStatusRequest)">
            <summary>
            Toggle User Status (Activate and Deactivate)
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Identity.UserController.ForgotPasswordAsync(SchoolV01.Application.Requests.Identity.ForgotPasswordRequest)">
            <summary>
            Forgot Password
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Identity.UserController.ResetPasswordAsync(SchoolV01.Application.Requests.Identity.ResetPasswordRequest)">
            <summary>
            Reset Password
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Identity.UserController.ResetPasswordUserAsync(SchoolV01.Application.Requests.Identity.ResetPasswordUserRequest)">
            <summary>
            Reset Password User
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Identity.UserController.Export(System.String)">
            <summary>
            Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.RoleClaimController.GetAll">
            <summary>
            Get All Role Claims(e.g. Product Create Permission)
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.RoleClaimController.GetAllByRoleId(System.String)">
            <summary>
            Get All Role Claims By Id
            </summary>
            <param name="roleId"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.RoleClaimController.Post(SchoolV01.Application.Requests.Identity.RoleClaimRequest)">
            <summary>
            Add a Role Claim
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK </returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.RoleClaimController.Delete(System.Int32)">
            <summary>
            Delete a Role Claim
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.RoleController.GetAll">
            <summary>
            Get All Roles (basic, admin etc.)
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.RoleController.Post(SchoolV01.Application.Requests.Identity.RoleRequest)">
            <summary>
            Add a Role
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.RoleController.Delete(System.String)">
            <summary>
            Delete a Role
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.RoleController.GetPermissionsByRoleId(System.String)">
            <summary>
            Get Permissions By Role Id
            </summary>
            <param name="roleId"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.RoleController.Update(SchoolV01.Application.Requests.Identity.PermissionRequest)">
            <summary>
            Edit a Role Claim
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.RoleController.Updateall(SchoolV01.Application.Requests.Identity.PermissionRequest)">
            <summary>
            Edit a Role Claim
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Utilities.AuditsController.GetUserTrailsAsync">
            <summary>
            Get Current User Audit Trails
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Utilities.AuditsController.ExportExcel(System.String,System.Boolean,System.Boolean)">
            <summary>
            Search Audit Trails and Export to Excel
            </summary>
            <param name="searchString"></param>
            <param name="searchInOldValues"></param>
            <param name="searchInNewValues"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="T:SchoolV01.Server.Controllers.Utilities.ExtendedAttributes.Base.ExtendedAttributesController`4">
            <summary>
            Abstract Extended Attributes Controller Class
            </summary>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Utilities.ExtendedAttributes.Base.ExtendedAttributesController`4.GetAll">
            <summary>
            Get All Entity Extended Attributes
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Utilities.ExtendedAttributes.Base.ExtendedAttributesController`4.GetAllByEntityId(`1)">
            <summary>
            Get All Entity Extended Attributes by entity id
            </summary>
            <param name="entityId"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Utilities.ExtendedAttributes.Base.ExtendedAttributesController`4.GetById(`0)">
            <summary>
            Get Entity Extended Attribute By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Utilities.ExtendedAttributes.Base.ExtendedAttributesController`4.Post(SchoolV01.Application.Features.ExtendedAttributes.Commands.AddEditExtendedAttributeCommand{`0,`1,`2,`3})">
            <summary>
            Create/Update a Entity Extended Attribute
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Utilities.ExtendedAttributes.Base.ExtendedAttributesController`4.Delete(`0)">
            <summary>
            Delete a Entity Extended Attribute
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Utilities.ExtendedAttributes.Base.ExtendedAttributesController`4.Export(System.String,`1,System.Boolean,System.Boolean,System.String)">
            <summary>
            Search Entity Extended Attribute and Export to Excel
            </summary>
            <param name="searchString"></param>
            <param name="entityId"></param>
            <param name="includeEntity"></param>
            <param name="onlyCurrentGroup"></param>
            <param name="currentGroup"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Utilities.Misc.DocumentsController.GetAll(System.Int32,System.Int32,System.String)">
            <summary>
            Get All Documents
            </summary>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="searchString"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Utilities.Misc.DocumentsController.GetById(System.Int32)">
            <summary>
            Get Document By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Utilities.Misc.DocumentsController.Post(SchoolV01.Application.Features.Documents.Commands.AddEditDocumentCommand)">
            <summary>
            Add/Edit Document
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Utilities.Misc.DocumentsController.Delete(System.Int32)">
            <summary>
            Delete a Document
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Utilities.Misc.DocumentTypesController.GetAll">
            <summary>
            Get All Document Types
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Utilities.Misc.DocumentTypesController.GetById(System.Int32)">
            <summary>
            Get Document Type By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Utilities.Misc.DocumentTypesController.Post(SchoolV01.Application.Features.DocumentTypes.Commands.AddEditDocumentTypeCommand)">
            <summary>
            Create/Update a Document Type
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Utilities.Misc.DocumentTypesController.Delete(System.Int32)">
            <summary>
            Delete a Document Type
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Utilities.Misc.DocumentTypesController.Export(System.String)">
            <summary>
            Search Document Types and Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.Utilities.PreferencesController.ChangeLanguageAsync(System.String)">
            <summary>
            Change Language Preference
            </summary>
            <param name="languageCode"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.DashboardController.GetDataAsync(System.Int32)">
            <summary>
            Get Dashboard Data
            </summary>
            <returns>Status 200 OK </returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.OwnersManagement.OwnersController.GetAll(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get All Owners
            </summary>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="searchString"></param>
            <param name="orderBy"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.OwnersManagement.OwnersController.GetOwnerImageAsync(System.Int32)">
            <summary>
            Get a Owner Image by Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.OwnersManagement.OwnersController.Post(SchoolV01.Application.Features.Owners.Commands.AddEditOwnerCommand)">
            <summary>
            Add/Edit a Owner
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.OwnersManagement.OwnersController.Delete(System.Int32)">
            <summary>
            Delete a Owner
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK response</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.OwnersManagement.OwnersController.Export(System.String)">
            <summary>
            Search Owners and Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.OwnersManagement.PassportsController.GetAll">
            <summary>
            Get All Passports
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.OwnersManagement.PassportsController.GetById(System.Int32)">
            <summary>
            Get a Passport By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.OwnersManagement.PassportsController.Post(SchoolV01.Application.Features.Passports.Commands.AddEditPassportCommand)">
            <summary>
            Create/Update a Passport
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.OwnersManagement.PassportsController.Delete(System.Int32)">
            <summary>
            Delete a Passport
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.OwnersManagement.PassportsController.Export(System.String)">
            <summary>
            Search Passports and Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.GeneralSettings.ProductCategoriesController.GetAllPaged(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get All Paged ProductCategories
            </summary>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="searchString"></param>
            <param name="orderBy"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.GeneralSettings.ProductCategoriesController.GetAllPagedMain(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get All Paged Main ProductCategories
            </summary>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="searchString"></param>
            <param name="orderBy"></param>
            <returns>Status 200 OK</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:SchoolV01.Server.Controllers.v1.GeneralSettings.ProductCategoriesController.GetAllSonsAndClassification(System.Int32,System.Int32,System.Int32,System.String,System.String)" -->
        <member name="M:SchoolV01.Server.Controllers.v1.GeneralSettings.ProductCategoriesController.GetById(System.Int32)">
            <summary>
            Get Product Category By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.GeneralSettings.ProductCategoriesController.GetAll">
            <summary>
            Get All Categories
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.GeneralSettings.ProductCategoriesController.GetCategorySons(System.Int32)">
            <summary>
            Get All Category Sons
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.GeneralSettings.ProductCategoriesController.Post(SchoolV01.Application.Features.ProductCategories.Commands.AddEdit.AddEditProductCategoryCommand)">
            <summary>
            Add/Edit a ProductCategory
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.GeneralSettings.ProductCategoriesController.Delete(System.Int32)">
            <summary>
            Delete a ProductCategory
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK response</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.GeneralSettings.ProductCategoriesController.Export(System.String)">
            <summary>
            Search ProductCategories and Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.Products.ProductOffersController.GetAllByProduct(System.Int32)">
            <summary>
            Get All Offers By Product
            </summary>
            <param name="productId"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.Products.ProductOffersController.GetAllActive">
            <summary>
            Get All Active Offers
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.Products.ProductOffersController.GetAllPaged(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get All ProductOffers Paged 
            </summary>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="searchString"></param>
            <param name="orderBy"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.Products.ProductOffersController.GetAllPagedActive(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get All ActiveProductOffers Paged 
            </summary>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="searchString"></param>
            <param name="orderBy"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.Products.ProductOffersController.GetActive(System.Int32)">
            <summary>
            Get Active Product Offer
            </summary>
            <param name="productId"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.Products.ProductOffersController.GetAllPagedByProduct(System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get All PagedOffers By Product
            </summary>
            <param name="productId"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.Products.ProductOffersController.GetById(System.Int32)">
            <summary>
            Get Product Offer By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.Products.ProductOffersController.Post(SchoolV01.Application.Features.Products.Commands.AddEdit.AddEditProductOfferCommand)">
            <summary>
            Add/Edit a Product Offer
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.Products.ProductOffersController.Delete(System.Int32)">
            <summary>
            Delete a Product Offer
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK response</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.Products.ProductsController.GetAll">
            <summary>
            Get All Products
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.Products.ProductsController.GetAllRecentProducts(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get All  Recent Products
            </summary>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="searchString"></param>
            <param name="orderBy"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.Products.ProductsController.GetAllPagedProductByCategoryId(System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get All  Paged  Products By CategoryId
            </summary>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="searchString"></param>
            <param name="orderBy"></param>
            <param name="categoryId"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.Products.ProductsController.GetAllPaged(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get All Paged Products
            </summary>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="searchString"></param>
            <param name="orderBy"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.Products.ProductsController.GetAllPagedSearchProduct(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Decimal,System.Decimal,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get All Paged Search Products
            </summary>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="searchString"></param>
            <param name="orderBy"></param>
            <param name="productname"></param>
            <param name="propductcategoryid"></param>
            <param name="propductSubcategoryid"></param>
            <param name="propductSubSubcategoryid"></param>
            <param name="propductSubSubSubcategoryid"></param>
            <param name="fromprice"></param> 
            <param name="toprice"></param>        
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.Products.ProductsController.GetById(System.Int32)">
            <summary>
            Get Product By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.Products.ProductsController.Post(SchoolV01.Application.Features.Products.Commands.AddEdit.AddEditCompanyProductCommand)">
            <summary>
            Add/Edit a Product for company profile
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.Products.ProductsController.Delete(System.Int32)">
            <summary>
            Delete a Product
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK response</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.Products.ProductsController.Export(System.String)">
            <summary>
            Search Products and Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Server.Controllers.v1.Products.ProductsController.ProductsBySearch(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Decimal,System.Decimal,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get All  Paged Products By Search
            </summary>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="searchString"></param>
            <param name="orderBy"></param>
            <param name="nameEn"></param>
            <param name="productParentCategoryId"></param>
            <param name="productSubCategoryId"></param>
            <param name="productSubSubCategoryId"></param>
            <param name="productSubSubSubCategoryId"></param>
            <param name="brandId"></param>
            <param name="retailpricestart"></param>
            <param name="retailpriceend"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:SchoolV01.Api.Controllers.FileUploadController.CheckFileExtension(Microsoft.AspNetCore.Http.IFormFile,SchoolV01.Shared.Enums.UploadFileTypeEnum)">
            The file extension must be jpg/bmp/png for images and txt/docx/pdf for files
        </member>
        <member name="M:SchoolV01.Api.Controllers.FileUploadController.CheckFileSize(Microsoft.AspNetCore.Http.IFormFile)">
            Check the file size, it must be less than 10 mb
        </member>
    </members>
</doc>
